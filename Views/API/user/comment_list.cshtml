@using SL.Util
@{
    RequestUtil req = new RequestUtil();
    int page = req.Int("page");
    int pageSize = req.Int("pageSize", 10);
    string keywords = req.String("keywords");
    int userId = req.Int("userId", false, "参数错误:userId");
    string auth = req.String("auth", false, "参数错误:auth");
    string status = req.String("status");

    if (req.HasError)
    {
        Json.Write(new { success = false, msg = req.FirstError, errors = req.GetErrors() }, Output);
    }
    else if (!AuthHelper.Check(userId, auth))
    {
        Json.Write(new { success = false, msg = "请重新登录" }, Output);
    }
    else
    {
        string where = "UserID=@p0";
        List<object> parameters = new List<object>() { userId };

        if (!string.IsNullOrEmpty(keywords))
        {
            where += " and Content like '%'+@p0+'%'";
            parameters.Add(keywords);
        }

        if (!string.IsNullOrEmpty(status))
        {
            where += " and Status=@p" + parameters.Count;
            parameters.Add(req.Int("Status"));
        }

        int total;
        var data = SL.Data.SQL.QueryPage("ID",
            "a.ID,a.Content,a.Pictures,a.InsertTime,a.Reply,a.Up,a.Type,b.Mobile,b.NickName,b.Avatars,a.Name,a.Pic,a.RID",
            @"(select a.ID,a.Content,Pictures,InsertTime,Reply,Up,Status,UserID,0 as Type,'' as Name,'' as Pic,0 as RID from Quan a union
            select a.ID,a.Content,Pictures,CommentTime as InsertTime,Reply,Up,Status,UserID,1 as Type,b.Name,Pic,b.ID as RID from RecommendComment a join Recommend b on a.RecommendID=b.ID union
            select a.ID,a.Content,Pictures,CommentTime as InsertTime,Reply,Up,Status,UserID,2 as Type,b.Name,MiddlePic as Pic,b.ID as RID from DestinationComment a join Destination b on a.DestinationID=b.ID union
            select a.ID,a.Content,Pictures,CommentTime as InsertTime,Reply,Up,Status,UserID,3 as Type,b.Name,Pic,b.ID as RID from ActivityComment a join Activity b on a.ActivityID=b.ID) a join Users b on a.UserID=b.ID",
            where,
            page,
            pageSize,
            parameters.ToArray(),
            out total);

        if (data != null)
        {
            for (int i = 0; i < data.Count; i++)
            {
                var item = data[i];
                item.Avatars = RequestFile.FullUrl(item.Avatars);

                if (!string.IsNullOrEmpty(item.Pictures))
                {
                    item.Pictures = Json.Decode<List<Dictionary<string, object>>>(item.Pictures);
                    for (int j = 0; j < item.Pictures.Count; j++)
                    {
                    }
                }
                if (!string.IsNullOrEmpty(item.Pic))
                {
                    item.Pic = RequestFile.FullUrl(item.Pic);
                }
                if (!string.IsNullOrEmpty(item.Reply))
                {
                    item.Reply = Json.Decode<List<Dictionary<string, object>>>(item.Reply);
                    item.Comments = item.Reply.Count;
                    if (item.Reply.Count != 0)
                    {
                        using (SL.Data.Database db = SL.Data.Database.Open())
                        {
                            for (int j = 0; j < item.Reply.Count; j++)
                            {
                                var reply = item.Reply[j];
                                int uid = (int)reply["UserID"];
                                var user = db.QuerySingle("select Mobile,NickName,Avatars from Users where ID=@p0", uid);
                                user.Mobile = user.Mobile.Substring(0, 3) + "****" + user.Mobile.Substring(7, 4);

                                reply["Mobile"] = user.Mobile;
                                reply["NickName"] = user.NickName;
                                reply["Avatars"] = RequestFile.FullUrl(user.Avatars);
                            }
                        }
                    }
                }
                else
                {
                    item.Comments = 0;
                }
            }
        }

        Json.Write(new { success = true, data = data, total = total }, Output);
    }
}

